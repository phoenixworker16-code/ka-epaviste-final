const fs = require('fs')
const path = require('path')

console.log('üîí V√©rification de s√©curit√© KA Auto √âpaves\n')

let issues = []
let warnings = []
let passed = []

// 1. V√©rifier .gitignore
console.log('1Ô∏è‚É£  V√©rification du .gitignore...')
const gitignorePath = path.join(__dirname, '..', '.gitignore')
if (fs.existsSync(gitignorePath)) {
  const gitignore = fs.readFileSync(gitignorePath, 'utf8')
  if (gitignore.includes('.env') && gitignore.includes('.env*.local')) {
    passed.push('‚úÖ .gitignore contient .env et .env*.local')
  } else {
    issues.push('‚ùå .gitignore ne prot√®ge pas correctement les fichiers .env')
  }
} else {
  issues.push('‚ùå Fichier .gitignore manquant')
}

// 2. V√©rifier que .env.local n'est pas track√©
console.log('2Ô∏è‚É£  V√©rification des fichiers sensibles...')
const { execSync } = require('child_process')
try {
  const trackedFiles = execSync('git ls-files', { encoding: 'utf8' })
  if (trackedFiles.includes('.env.local') || trackedFiles.includes('.env')) {
    issues.push('üö® CRITIQUE: Fichier .env track√© dans Git!')
  } else {
    passed.push('‚úÖ Aucun fichier .env track√© dans Git')
  }
} catch (error) {
  warnings.push('‚ö†Ô∏è  Impossible de v√©rifier Git (pas un repo Git?)')
}

// 3. V√©rifier les variables d'environnement
console.log('3Ô∏è‚É£  V√©rification des variables d\'environnement...')
const envLocalPath = path.join(__dirname, '..', '.env.local')
if (fs.existsSync(envLocalPath)) {
  const envContent = fs.readFileSync(envLocalPath, 'utf8')
  
  // V√©rifier JWT_SECRET
  if (envContent.includes('JWT_SECRET')) {
    const jwtMatch = envContent.match(/JWT_SECRET="([^"]+)"/)
    if (jwtMatch) {
      const secret = jwtMatch[1]
      if (secret.length < 32) {
        issues.push('‚ùå JWT_SECRET trop court (minimum 32 caract√®res)')
      } else if (secret.includes('secret') || secret.includes('test') || secret.includes('demo')) {
        warnings.push('‚ö†Ô∏è  JWT_SECRET semble √™tre un exemple, changez-le!')
      } else {
        passed.push('‚úÖ JWT_SECRET pr√©sent et semble s√©curis√©')
      }
    }
  } else {
    issues.push('‚ùå JWT_SECRET manquant dans .env.local')
  }
  
  // V√©rifier DATABASE_URL
  if (envContent.includes('DATABASE_URL')) {
    passed.push('‚úÖ DATABASE_URL configur√©e')
  } else {
    issues.push('‚ùå DATABASE_URL manquante')
  }
} else {
  warnings.push('‚ö†Ô∏è  Fichier .env.local non trouv√© (normal si pas encore configur√©)')
}

// 4. V√©rifier README.md
console.log('4Ô∏è‚É£  V√©rification du README.md...')
const readmePath = path.join(__dirname, '..', 'README.md')
if (fs.existsSync(readmePath)) {
  const readme = fs.readFileSync(readmePath, 'utf8')
  
  if (readme.includes('test@123') || readme.includes('admin@ka-autoepaves.fr')) {
    issues.push('üö® CRITIQUE: Credentials dans README.md!')
  } else {
    passed.push('‚úÖ Pas de credentials dans README.md')
  }
  
  if (readme.includes('DATABASE_URL') || readme.includes('postgresql://')) {
    issues.push('üö® CRITIQUE: URL de base de donn√©es dans README.md!')
  } else {
    passed.push('‚úÖ Pas d\'URL de base de donn√©es dans README.md')
  }
} else {
  warnings.push('‚ö†Ô∏è  README.md non trouv√©')
}

// 5. V√©rifier next.config.mjs
console.log('5Ô∏è‚É£  V√©rification de next.config.mjs...')
const nextConfigPath = path.join(__dirname, '..', 'next.config.mjs')
if (fs.existsSync(nextConfigPath)) {
  const nextConfig = fs.readFileSync(nextConfigPath, 'utf8')
  
  if (nextConfig.includes('X-Frame-Options')) {
    passed.push('‚úÖ Headers de s√©curit√© configur√©s')
  } else {
    warnings.push('‚ö†Ô∏è  Headers de s√©curit√© manquants dans next.config.mjs')
  }
} else {
  warnings.push('‚ö†Ô∏è  next.config.mjs non trouv√©')
}

// 6. V√©rifier rate-limit.ts
console.log('6Ô∏è‚É£  V√©rification du rate limiting...')
const rateLimitPath = path.join(__dirname, '..', 'lib', 'rate-limit.ts')
if (fs.existsSync(rateLimitPath)) {
  passed.push('‚úÖ Rate limiting impl√©ment√©')
} else {
  warnings.push('‚ö†Ô∏è  Rate limiting non impl√©ment√©')
}

// 7. V√©rifier les d√©pendances
console.log('7Ô∏è‚É£  V√©rification des d√©pendances...')
const packageJsonPath = path.join(__dirname, '..', 'package.json')
if (fs.existsSync(packageJsonPath)) {
  const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'))
  const deps = { ...packageJson.dependencies, ...packageJson.devDependencies }
  
  if (deps['bcryptjs'] || deps['bcrypt']) {
    passed.push('‚úÖ Bcrypt install√© pour le hashing des mots de passe')
  } else {
    issues.push('‚ùå Bcrypt manquant')
  }
  
  if (deps['jsonwebtoken']) {
    passed.push('‚úÖ JWT install√©')
  } else {
    issues.push('‚ùå jsonwebtoken manquant')
  }
}

// R√©sum√©
console.log('\n' + '='.repeat(60))
console.log('üìä R√âSUM√â DE LA V√âRIFICATION DE S√âCURIT√â')
console.log('='.repeat(60) + '\n')

if (passed.length > 0) {
  console.log('‚úÖ TESTS R√âUSSIS (' + passed.length + '):')
  passed.forEach(p => console.log('   ' + p))
  console.log()
}

if (warnings.length > 0) {
  console.log('‚ö†Ô∏è  AVERTISSEMENTS (' + warnings.length + '):')
  warnings.forEach(w => console.log('   ' + w))
  console.log()
}

if (issues.length > 0) {
  console.log('‚ùå PROBL√àMES CRITIQUES (' + issues.length + '):')
  issues.forEach(i => console.log('   ' + i))
  console.log()
}

// Score de s√©curit√©
const total = passed.length + warnings.length + issues.length
const score = Math.round((passed.length / total) * 100)

console.log('='.repeat(60))
console.log(`üéØ SCORE DE S√âCURIT√â: ${score}%`)
console.log('='.repeat(60) + '\n')

if (issues.length > 0) {
  console.log('üö® ACTION REQUISE: Corrigez les probl√®mes critiques avant le d√©ploiement!')
  console.log('üìñ Consultez URGENT_SECURITY_ACTIONS.md pour les instructions\n')
  process.exit(1)
} else if (warnings.length > 0) {
  console.log('‚ö†Ô∏è  Am√©liorations recommand√©es disponibles')
  console.log('üìñ Consultez SECURITY.md pour plus de d√©tails\n')
  process.exit(0)
} else {
  console.log('‚úÖ Toutes les v√©rifications de s√©curit√© sont pass√©es!')
  console.log('üöÄ Vous pouvez d√©ployer en toute s√©curit√©\n')
  process.exit(0)
}
